{"version":3,"sources":["components/contactItem/ContactItem.module.css","components/App.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/contactForm/ContactForm.js","components/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","changeHandler","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","contactForm","type","onChange","Component","ContactItem","contact","id","onRemoveContact","listItem","listItemP","listItemButton","onClick","ContactList","contacts","contactList","map","Filter","onChangeFilter","App","filter","addContact","uuid","prevState","removeContact","changeFilter","getFilteredContacts","toLowerCase","includes","storedContacts","JSON","parse","localStorage","getItem","length","prevProps","setItem","stringify","sectionTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f5240f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__4mWyx\",\"listItemP\":\"ContactItem_listItemP__1Epcs\",\"listItemButton\":\"ContactItem_listItemButton__1LRe5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__1cXWU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3ke38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3zPvU\"};","import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onSubmit(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <br />\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={this.changeHandler}\n          />\n        </label>\n        <br />\n        <label>\n          Number\n          <br />\n          <input\n            name=\"number\"\n            type=\"text\"\n            value={number}\n            onChange={this.changeHandler}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ contact: { id, name, number }, onRemoveContact }) => {\n  return (\n    <li className={styles.listItem}>\n      <p className={styles.listItemP}>\n        {name}: {number}\n      </p>\n      <button\n        className={styles.listItemButton}\n        onClick={() => onRemoveContact(id)}\n        type=\"button\"\n      >\n        Удалить\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport ContactItem from '../contactItem/ContactItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          onRemoveContact={onRemoveContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <form>\n      <label>\n        Find contacts by name\n        <br />\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        ></input>\n      </label>\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from './contactForm/ContactForm';\nimport { v4 as uuid } from 'uuid';\nimport styles from './App.module.css';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  componentDidMount() {\n    const storedContacts = JSON.parse(localStorage.getItem('contacts'));\n    storedContacts &&\n      storedContacts.length > 0 &&\n      this.setState({ contacts: storedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    prevState.contacts !== this.state.contacts &&\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <div>\n        <h1 className={styles.sectionTitle}>Phonebook</h1>\n\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className={styles.sectionTitle}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        <ContactList\n          onRemoveContact={this.removeContact}\n          contacts={this.getFilteredContacts()}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}